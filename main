#include <stdio.h>
#include <stdlib.h>
#include "tp4.h"

static void purger(void)

{
    int c;


    while ((c = getchar()) != '\n' && c != EOF)

    {}

}


void main()
{
    printf("Bonjour Monsieur, pour que votre test aille plus vite, nous avons mis en commentaire les scanfs et mis les fonctions avec des valeurs brutes. \n");
    int choix, b, CID, annee;
    char nom[NMAX], prenom[NMAX];
    char sexe=' ';
    Benevole *ben, *ben1, *ben2;
    Tranche *abr=NULL;
    Tranche *p=NULL;
    ListBenevoles *listeHonneur;
    //extern ListeTranche *l;
    Tranche *ty;
    do
    {
    printf("Que voulez vous faire ? : \n1 : Initialiser un arbre\n2 : Ajouter une tranche\n3 : Ajouter un benevole\n4 : Afficher les tranches d'ages\n5 : Afficher les benevoles\n6 : Supprimer un benevole\n7 : Supprimer une tranche\n8 : Afficher les benevoles d'honneur\n9 : Afficher le nombre total de benevoles\n10 : Actualiser l'ABR\n11 : Afficher le pourcentage de benevoles d'une tranche d'age\n12 : Detruire l'arbre\n13 : Quitter \n");
    scanf("%d", &choix);
    switch(choix)
    {
        case 1 : abr=NULL;  //OK
                 printf("L'arbre a bien ete initialise. \n");
                 break;

        case 2 :    printf("Nous allons ajouter un noeud a l'arbre de borne superieure 20.\n");
                    //printf("Nous allons ajouter un noeud a l'arbre, quelle est la borne superieur ?\n");
                    //scanf("%d", &b);
                    abr=ajoutTranche(abr, 20);
                    break;

        case 3 :
                 /*printf("saisir le nom\n");
                 scanf("%s", nom);
                 printf("saisir le prenom\n");
                 scanf("%s", prenom);
                 printf("saisir le sexe\n");
                 purger();
                 scanf("%c", &sexe);
                 printf("saisir le CID\n");
                 scanf("%d", &CID);
                 printf("saisir l'annee de naissance\n");
                 scanf("%d", &annee);*/
                 printf("Nous allons inserer un benevole dans la tranche 45! \n");
                 ben=nouveauBen("FLANTIER", "NOEL", 117, 'M',1972);
                 insererBen(abr, ben);
                 printf("Nous allons inserer deux autres benevoles dans la tranche 20 \n");
                 ben1=nouveauBen("DUPONT", "JEAN", 118, 'M',1997);
                 insererBen(abr, ben1);
                 ben2=nouveauBen("FLAMENT", "DIANE", 134, 'F',1998);
                 insererBen(abr, ben2);
                 break;

        case 4 : printf("Voici l'arbre dans l'ordre decroissant : \n \n");
                 afficherArbre(abr);
                 printf("\n");

                 break;

        case 5 : //printf("Quelle est la borne superieur de la tranche a afficher ?\n");
                 //scanf("%d", &b);
                 if (chercherTranche(abr, 45) == NULL)
                 {
                     printf("Desole, cette tranche n'existe pas. \n");
                 }
                 else
                 {
                     afficherTranche(abr, 45);
                 }*/
                 printf("Nous allons afficher les benevoles de la tranche de bornesup 20 \n");
                 if (chercherTranche(abr, 20) == NULL)
                 {
                     printf("Desole, cette tranche n'existe pas. \n");
                 }
                 else
                 {
                     afficherTranche(abr, 20);
                 }
                 break;

        case 6 : //printf("Quel CIN puis quelle annee de naissance?\n");
                 //scanf("%d %d", &CID, &annee);
                 //supprimerBen(abr, CID, annee);
                 printf("Maintenant nous allons supprimer notre deuxieme benevole de test\n");
                 if (supprimerBen(abr, 118, 1997) == 0)
                 {
                     printf("Benevole supprime avec succes ! \n");
                 }
                 else
                 {
                     printf("Il y a eu une erreur ! \n");
                 }
                 break;

        case 7 : //printf("Quelle borne sup ?\n");
                 //scanf("%d", &b);
                 //Ne pas executer ce case si vous voulez tester la fonction pourcentageTranche()
                 printf("Nous allons maintenant supprimer la tranche 45. \n");
                 supprimerTranche(abr, 45);
                 afficherArbre(abr);
                 break;

        case 8 :
                 listeHonneur =BenDhonneur(abr);
                 printf("nom|        prenom| sexe |    CID    | annee \n");
                 afficherBen(listeHonneur->premier);
                 break;

        case 9 : printf("Nombre total de benevoles : %d\n", totalBen(abr));
                 break;

        case 10 : printf("Nombre de benevoles actualises : %d\n", actualiser(abr));
                  break;

        case 11 :
                  //printf("Quelle borne sup ?\n");
                  //scanf("%d", &b);
                  printf("Nous allons afficher le pourcentage de benevoles entre 41 et 45 ans!\n");
                  b=45;
                  printf("nombre de bene dans tranche 45 : %d \n", totalBenTranche(abr, b));
                  printf("Pourcentage de benevoles entre %d ans et %d ans : %f \n", b-4, b, pourcentageTranche(abr, b));
                  break;

        case 12 : detruire_Arbre(abr);
                    abr = NULL;
                    if (abr == NULL)
                 {
                  printf("L'arbre a bien ete supprime ! \n");
                 }
                  break;


        case 13 : printf("Au revoir\n");
                  break;


        default : printf("Nombre non reconnu \n");
                  break;

    }
    } while(choix!=13);
}
